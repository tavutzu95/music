version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: spotify-mvp-db
    environment:
      POSTGRES_DB: spotify_mvp
      POSTGRES_USER: spotify_user
      POSTGRES_PASSWORD: spotify_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spotify_user -d spotify_mvp"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: node:18-alpine
    container_name: spotify-mvp-backend
    working_dir: /app
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://spotify_user:spotify_password@postgres:5432/spotify_mvp
      JWT_SECRET: your-super-secure-jwt-secret-change-this-in-production
      JWT_REFRESH_SECRET: your-super-secure-refresh-secret-change-this-in-production
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_EXPIRES_IN: 7d
      FILE_STORAGE_TYPE: local
      UPLOAD_PATH: ./uploads
      CORS_ORIGIN: http://localhost:3000
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      MAX_FILE_SIZE: 50MB
      TRUST_PROXY: false
    volumes:
      # Mount your local backend source code
      - ./backend:/app
      # Mount node_modules to persist between runs
      - backend_node_modules:/app/node_modules
      # Mount uploads directory for audio files
      - ./backend/uploads:/app/uploads
      # Mount sample music
      - ./sample-music:/app/sample-music
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        echo 'ðŸ“¦ Installing backend dependencies...' &&
        npm install &&
        echo 'âœ… Backend dependencies installed' &&
        echo 'ðŸš€ Starting backend server...' &&
        npm run dev
      "
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: node:18-alpine
    container_name: spotify-mvp-frontend
    working_dir: /app
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      REACT_APP_STREAM_URL: http://localhost:3001/api/stream
      REACT_APP_APP_NAME: Spotify MVP
      REACT_APP_VERSION: 1.0.0
      GENERATE_SOURCEMAP: false
    volumes:
      # Mount your local frontend source code
      - ./frontend:/app
      # Mount node_modules to persist between runs
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: >
      sh -c "
        echo 'ðŸ“¦ Installing frontend dependencies...' &&
        npm install &&
        echo 'âœ… Frontend dependencies installed' &&
        echo 'ðŸš€ Starting frontend development server...' &&
        npm run dev -- --host 0.0.0.0
      "

volumes:
  postgres_data:
  backend_node_modules:
  frontend_node_modules:

networks:
  default:
    driver: bridge
